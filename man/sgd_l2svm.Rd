% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sgd_l2svm.R
\name{sgd_l2svm}
\alias{sgd_l2svm}
\title{SGD for L2-SVM with Optional Momentum}
\usage{
sgd_l2svm(
  learning_rates,
  num_iterations,
  data_generator,
  dimension,
  lambda = 0,
  use_momentum = FALSE,
  momentum_schedule = NULL,
  momentum_coef = 1,
  w_start = NULL,
  w0_start = NULL,
  burnin = 0
)
}
\arguments{
\item{learning_rates}{Vector of learning rates for each iteration}

\item{num_iterations}{Number of SGD iterations}

\item{data_generator}{Function that generates data points (should return list with X and y)}

\item{dimension}{Dimension of the parameter space}

\item{lambda}{L2 regularization parameter (default = 0)}

\item{use_momentum}{Whether to use momentum (default = FALSE)}

\item{momentum_schedule}{Vector of momentum coefficients (if use_momentum = TRUE and not NULL, uses this; otherwise calculates from momentum_coef)}

\item{momentum_coef}{Momentum coefficient for automatic schedule calculation (default = 1)}

\item{w_start}{Starting point for weights (default = NULL, uses zero)}

\item{w0_start}{Starting point for bias (default = NULL, uses zero)}

\item{burnin}{Number of burn-in iterations (default = 0)}
}
\value{
List containing:
\item{w}{Final weight vector}
\item{w0}{Final bias term}
\item{w_path}{Weight trajectory (num_iterations x dimension)}
\item{w0_path}{Bias trajectory (num_iterations x 1)}
\item{loss_path}{Loss trajectory}
}
\description{
Performs stochastic gradient descent for L2-Support Vector Machine with
optional momentum (heavy ball method). Uses online data generation.
}
\examples{
# Set up L2-SVM problem
set.seed(123)
data_gen <- create_l2svm_generator()

num_iter <- 1000
learning_rates <- 0.4 * (1:num_iter)^(-0.6)

# Run SGD without momentum
result <- sgd_l2svm(learning_rates, num_iter, data_gen, 5)
cat("Final weights:", round(result$w, 3), "\\n")
cat("Final bias:", round(result$w0, 3), "\\n")

# Run SGD with momentum (automatic schedule)
result_momentum <- sgd_l2svm(learning_rates, num_iter, data_gen, 5,
                            use_momentum = TRUE, momentum_coef = 1)
cat("Final weights (momentum):", round(result_momentum$w, 3), "\\n")

} 